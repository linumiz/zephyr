# Copyright 2024 Linumiz
# SPDX-License-Identifier: Apache-2.0

description: |
  TI MSPM0 PWM node for MSPM0 SoCs. Each channel in MSPM0 can be configured
  to use for PWM operation. There are three PWM modes supported by this module.

  For example to configuring eMIOS instance 0 with:
    - Channel 0 for mode OPWFMB
    - Channel 1 for mode OPWMB

    mspm0pwm: pwm {
      pwm_0 {
        channel = <0>;
        pwm-mode = "EDGE_ALIGN_UP";
        prescaler = <0>;
        period = <65534>;
        duty-cycle = <32768>;
      };

      pwm_1 {
        channel = <1>;
        pwm-mode = "CENTER_ALIGN";
        prescaler = <4>;
        period = <65534>;
        duty-cycle = <32768>;
      };
    };

compatible: "ti,mspm0g1x0x_g3x0x-timer-pwm"

include: [pwm-controller.yaml, base.yaml, pinctrl-device.yaml]

properties:
  pinctrl-0:
    required: true

  pinctrl-names:
    required: true

  ti,advanced:
    type: boolean
    description: |
      Indicate as General Purpose Timer Advance (TIMA)

  ti,cc-index:
    type: int
    required: true
    description: |
      Capture input/Compare output index, should match with to pin function

  ti,pulse-cycle:
    type: int
    required: true
    description: |
      Duty-cycle (in ticks) for PWM channel at boot time.

  ti,prescaler:
    type: int
    required: true
    description: |
      The clock divider for internal counter prescaler.
      Valid range [0 ... 255].

  "#pwm-cells":
    const: 2

pwm-cells:
  - channel
  # Period in terms of nanoseconds
  - period

child-binding:
  properties:
    channel:
      type: int
      description: MSPM0 PWM channel

    ti,pwm-mode:
      type: string
      description: |
        Select PWM mode:
        - EDGE_ALIGN: generate pulses with edge aligned down counting mode

        - EDGE_ALIGN_UP:  generate pulses with edge aligned up counting mode

        - CENTER_ALIGN: generates pulses center aligned up and down counting mode

      enum:
        - "EDGE_ALIGN"
        - "EDGE_ALIGN_UP"
        - "CENTER_ALIGN"

    ti,cc-mode:
      type: string
      description: |
        Select input capture mode:
        - EDGE_TIME: capture edge time with down mode

        - PERIOD_CAPTURE: capture period with down mode

        - PULSE_WIDTH: capture pulse width down mode

      enum:
        - "EDGE_TIME"
        - "PERIOD_CAPTURE"
        - "PULSE_WIDTH"

    ti,period:
      type: int
      required: true
      description: |
        PWM Period in cycle at boot time.
